services:
  api:
    build:
      context: .
      dockerfile: Dockerfile.dev
    ports:
      - "3000:3000"
    environment:
      REDIS_URL: redis://redis:6379
      KAFKA_BROKER: kafka:9092
      KAFKAJS_NO_PARTITIONER_WARNING: 1
      
    depends_on:
      - redis
      - kafka
    networks:
      - kafka-net
      - redis-net
    volumes:
      - .:/app
    working_dir: /app
    entrypoint: ["./wait-for-kafka.sh", "yarn", "dev"]
    restart: on-failure

  redis:
    image: redis:7-alpine
    networks:
      - redis-net

  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    networks:
      - kafka-net

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    container_name: kafka
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - kafka-net
    hostname: kafka
networks:
  kafka-net:
    driver: bridge
  redis-net:
    driver: bridge

